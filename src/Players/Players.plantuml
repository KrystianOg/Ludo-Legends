@startuml

title __PLAYERS's Class Diagram__\n

  namespace Players {
    class Players.Blank {
        + Blank()
        + render()
        + tick()
    }
  }
  

  namespace Players {
    class Players.Bot {
        - input : int
        + Bot()
        + render()
        + tick()
        - getInBaseInput()
        - getOutsideBaseInput()
        - moveLogic()
        - useUltimateAbility()
    }
  }
  

  namespace Players {
    class Players.Person {
        {static} + defaultNickname : String[]
        - input : int
        + Person()
        + render()
        + tick()
        - getInput()
        - inBaseOrWon()
        - moveLogic()
    }
  }
  

  namespace Players {
    abstract class Players.Player {
        # beats : int
        # chance : List<Integer>
        # clicked : boolean
        # counter : Counter[]
        # counterColor : BufferedImage
        # deaths : int
        # fireTile : List<Tile>
        # isPlayer : boolean
        # isinbase : boolean
        # lastRolls : List<Integer>
        # nickname : String
        # notSix : List<Boolean>
        # points : int
        # resetFireWhileTurn : int
        # rollsLeft : int
        # ultLoad : int
        # won : boolean
        + Player()
        + addBeat()
        + addDeath()
        + addPoint()
        + clearUltBarLoad()
        + getBeats()
        + getChance()
        + getCounter()
        + getDeaths()
        + getEndingPos()
        + getPlayerData()
        + getPoints()
        + getRollsLeft()
        + getStartingPos()
        + getUltLoad()
        + getWon()
        + isThird()
        + removeLastMove()
        {abstract} + render()
        + renderFire()
        + renderInBaseCounters()
        + renderUltBar()
        + resetList()
        + resetRolls()
        + resetUltLoad()
        + rollsMinusOne()
        + rollsPlusOne()
        + setBotClicked()
        + setCounter()
        + setCounters()
        + setFireTiles()
        + setIsinbase()
        + setRollsLeft()
        {abstract} + tick()
        # counterIsMoving()
        # notSixLogic()
        # resetFire()
        # setInBase()
    }
  }
  

  namespace Players {
    class Players.PlayerData {
        - kills : int
        - nickname : String
        - player : boolean
        - playerId : int
        - score : int
        - wins : int
        + PlayerData()
        + PlayerData()
        + PlayerData()
        + getKills()
        + getNickname()
        + getPlayerId()
        + getScore()
        + getWins()
        + isPlayer()
        + setKills()
        + setNickname()
        + setPlayerId()
        + setScore()
        + setWins()
    }
  }
  

  Players.Blank -up-|> Players.Player
  Players.Bot -up-|> Players.Player
  Players.Person -up-|> Players.Player
  Players.Player o-- Entities.PositionOnMap : endingPos
  Players.Player o-- ludogame.Handler : handler
  Players.Player o-- Entities.PositionOnMap : startingPos


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
