@startuml

title __LUDOGAME's Class Diagram__\n

  namespace ludogame {
    class ludogame.DBConnect {
        - connected : boolean
        - connection : Connection
        - password : String
        - resultSet : ResultSet
        - statement : Statement
        - url : String
        - user : String
        + DBConnect()
        + addResults()
        + close()
        + getData()
        + getUser()
        + isConnected()
        - addNewPlayer()
    }
  }
  

  namespace ludogame {
    class ludogame.Game {
        - bs : BufferStrategy
        - fps : int
        - g : Graphics
        - height : int
        - running : boolean
        - thread : Thread
        - width : int
        + Game()
        + getDisplay()
        + getFrameHeight()
        + getFrameWidth()
        + getKeyboardManager()
        + getMousemanager()
        + isRunning()
        + run()
        + start()
        + stop()
        - init()
        - render()
        - setColors()
        - tick()
    }
  }
  

  namespace ludogame {
    class ludogame.Handler {
        + Handler()
        + getBotNickname()
        + getDice()
        + getDisplay()
        + getFrameHeight()
        + getFrameWidth()
        + getGame()
        + getGameState()
        + getHighScoresState()
        + getHoverX()
        + getHoverY()
        + getKeyboardManager()
        + getLoadingScreen()
        + getMenuState()
        + getMouseClickX()
        + getMouseClickY()
        + getPlayer()
        + getPlayer()
        + getPrepState()
        + getRoll()
        + getSettingState()
        + getTile()
        + getTimer()
        + getTurnOf()
        + removeCounterFromTile()
        + resetMousePOS()
        + setCounterOnTile()
        + setDisplay()
        + setGame()
        + setGameState()
        + setLoadingScreen()
        + setTurnof()
    }
  }
  

  namespace ludogame {
    class ludogame.Launcher {
        {static} + main()
    }
  }
  

  namespace ludogame {
    class ludogame.LoadingScreen {
        - bs : BufferStrategy
        - doRender : boolean
        - g : Graphics
        - height : int
        - running : boolean
        - thread : Thread
        - tick : int
        - value : int
        - width : int
        + LoadingScreen()
        + getRender()
        + run()
        + setRender()
        + start()
        + stop()
        - init()
        - render()
        - renderLoadingScreen()
        - tick()
    }
  }
  

  ludogame.Game .up.|> java.lang.Runnable
  ludogame.Game o-- states.State : gameState
  ludogame.Game o-- states.State : highScoresState
  ludogame.Game o-- states.State : menuState
  ludogame.Game o-- states.State : prepState
  ludogame.Game o-- states.State : settingState
  ludogame.Game o-- display.Display : display
  ludogame.Game o-- ludogame.Handler : handler
  ludogame.Game o-- input.KeyboardManager : keyboardManager
  ludogame.Game o-- input.MouseManager : mouseManager
  ludogame.Handler o-- display.Display : display
  ludogame.Handler o-- ludogame.Game : game
  ludogame.Handler o-- states.GameState : gameState
  ludogame.Handler o-- ludogame.LoadingScreen : loadingScreen
  ludogame.LoadingScreen .up.|> java.lang.Runnable
  ludogame.LoadingScreen o-- display.Display : display
  ludogame.LoadingScreen o-- ludogame.Handler : handler


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
