Index: src/states/HighScoresState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package states;\r\n\r\nimport Entities.ui.Button;\r\nimport GFX.Assets;\r\nimport GFX.DynamicBackground;\r\nimport GFX.Text;\r\nimport Players.PlayerData;\r\nimport ludogame.DBConnect;\r\nimport ludogame.Handler;\r\n\r\nimport java.awt.*;\r\nimport java.awt.geom.RoundRectangle2D;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\nimport static states.GameState.color;\r\n\r\n\r\n//tabela z wynikami\r\n//obsługa plików, zapis, odczyt, według nazwy gracza która bedzie podawana\r\n//sumuje zdobyte punkty / zbicia pionków, nie uwzględnia botów\r\n//wchodzi się z menu tak jak do ustawień\r\n\r\n//może eksportowanie plików na stronę internetową?\r\n\r\npublic class HighScoresState extends State{\r\n\r\n    //private final Button back;\r\n    private static final int LEADERBOARD_WIDTH=715,LEADERBOARD_HEIGHT=625;\r\n    private static int FRAME_X,FRAME_Y;\r\n\r\n    private final List<PlayerData> playerData;\r\n    private DBConnect connect;\r\n    private DynamicBackground dynamicBackground;\r\n    private final Color onHover=new Color(0,0,0,40);\r\n    private final Color grayOp=new Color(38,38,38,180);\r\n    private final Color textColor=new Color(26,26,26,220);\r\n\r\n    private boolean sortByScore;\r\n\r\n    private final Rectangle scoreHitbox;\r\n    private final Rectangle beatsHitbox;\r\n    private boolean scoreHover,beatsHover;\r\n\r\n    private final Entities.ui.Button back;\r\n\r\n    public HighScoresState(Handler handler) {\r\n        super(handler);\r\n\r\n        playerData=new LinkedList<>();\r\n        FRAME_X=(handler.getFrameWidth()-LEADERBOARD_WIDTH)/2;\r\n        FRAME_Y=(handler.getFrameHeight()-LEADERBOARD_HEIGHT+40)/2+15;\r\n\r\n        back=new Button(handler,940,35,(float)0.7,Assets.medium_button_template,Assets.back_button);\r\n\r\n        scoreHitbox=new Rectangle(FRAME_X+375,45,150,45);\r\n        beatsHitbox=new Rectangle(FRAME_X+545,45,150,45);\r\n\r\n        scoreHover=false;\r\n        beatsHover=false;\r\n    }\r\n\r\n    public void init(DynamicBackground dynamicBackground){\r\n        playerData.clear();\r\n        this.dynamicBackground=dynamicBackground;\r\n        connect=new DBConnect();    //<-highscores;\r\n\r\n        if(connect.isConnected())\r\n        connect.getData(\"score\",10,playerData);\r\n\r\n        sortByScore=true;\r\n    }\r\n\r\n    @Override\r\n    public void tick() {\r\n        dynamicBackground.tick();\r\n        back.tick();\r\n\r\n        if(scoreHitbox.contains(handler.getHoverX(),handler.getHoverY())){\r\n            scoreHover=true;\r\n            if(scoreHitbox.contains(handler.getMouseClickX(),handler.getMouseClickY())&&!sortByScore){\r\n                handler.resetMousePOS();\r\n                playerData.clear();\r\n                connect.getData(\"score\",10,playerData);\r\n                sortByScore=true;\r\n            }\r\n        }\r\n        else\r\n            scoreHover=false;\r\n\r\n        if(beatsHitbox.contains(handler.getHoverX(),handler.getHoverY())){\r\n            beatsHover=true;\r\n            if(beatsHitbox.contains(handler.getMouseClickX(),handler.getMouseClickY())&&sortByScore){\r\n                handler.resetMousePOS();\r\n                playerData.clear();\r\n                connect.getData(\"kills\",10,playerData);\r\n                sortByScore=false;\r\n            }\r\n        }\r\n        else\r\n            beatsHover=false;\r\n\r\n        if(back.contains(handler.getMouseClickX(),handler.getMouseClickY())){\r\n            handler.resetMousePOS();\r\n            setState(handler.getGame().menuState);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void render(Graphics g) {\r\n        Graphics2D g2=(Graphics2D)g;\r\n\r\n        dynamicBackground.render(g);\r\n\r\n        drawHead(g);\r\n        fillRoundRec(g);\r\n\r\n        for(int i=0;i<playerData.size();i++){\r\n            drawNextPlayer(playerData.get(i),i,g);\r\n        }\r\n\r\n        if(scoreHover) {\r\n            g2.setPaint(onHover);\r\n            g2.fill(new RoundRectangle2D.Double(FRAME_X + 375, 45, 150, 45, 10, 10));\r\n        }else if(beatsHover)  {\r\n            g2.setPaint(onHover);\r\n            g2.fill(new RoundRectangle2D.Double(FRAME_X+545,45,150,45,10,10));\r\n        }\r\n\r\n        back.render(g);\r\n\r\n    }\r\n\r\n    private void drawHead(Graphics g){\r\n\r\n        Graphics2D g2=(Graphics2D)g;\r\n        g2.setPaint(grayOp);\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X,30,LEADERBOARD_WIDTH,75,20,20));\r\n\r\n        g2.setPaint(new Color(233,192,33));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+20,45,45,45,10,10));\r\n        g2.setPaint(Color.white);\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+85,45,270,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+375,45,150,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+545,45,150,45,10,10));\r\n\r\n        Text.drawString(g,\"Nickname\",FRAME_X+95,82,false,textColor,Assets.Ubuntu40);\r\n        Text.drawString(g,\"Score\",FRAME_X+385,82,false,textColor,Assets.Ubuntu40);\r\n        Text.drawString(g,\"Beats\",FRAME_X+555,82,false,textColor,Assets.Ubuntu40);\r\n    }\r\n\r\n    private void fillRoundRec(Graphics g){\r\n        Graphics2D g2=(Graphics2D)g;\r\n        g2.setPaint(grayOp);\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X,FRAME_Y,LEADERBOARD_WIDTH,LEADERBOARD_HEIGHT,20,20));\r\n    }\r\n\r\n    private void drawNextPlayer(PlayerData playerData,int i,Graphics g){\r\n        Graphics2D g2=(Graphics2D)g;\r\n\r\n        g2.setPaint(Color.white);\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+20,FRAME_Y+20+i*60,45,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+85,FRAME_Y+20+i*60,270,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+375,FRAME_Y+20+i*60,150,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+545,FRAME_Y+20+i*60,150,45,10,10));\r\n\r\n        if(i>=0&&i<3){  //puchary\r\n            g.drawImage(Assets.cup[i],FRAME_X+22,FRAME_Y+i*60+22,null);\r\n        }\r\n        else{           //numer miejsca\r\n            Text.drawString(g,Integer.toString(i+1),FRAME_X+42,FRAME_Y+i*60+42,true,textColor,Assets.Ubuntu40);\r\n        }\r\n\r\n        Text.drawString(g,playerData.getNickname(),FRAME_X+95,FRAME_Y+i*60+54,false,textColor,Assets.Ubuntu34);\r\n        Text.drawString(g,Integer.toString(playerData.getScore()),FRAME_X+385,FRAME_Y+i*60+54,false,textColor,Assets.Ubuntu34);\r\n        Text.drawString(g,Integer.toString(playerData.getKills()),FRAME_X+555,FRAME_Y+i*60+54,false,textColor,Assets.Ubuntu34);\r\n    }\r\n\r\n    private void getScore()\r\n    {\r\n\r\n\r\n    }\r\n\r\n    private void getKills()\r\n    {\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/states/HighScoresState.java	(revision 6eea23c141276369a061c567ea06d48da80d4eac)
+++ src/states/HighScoresState.java	(date 1588160003962)
@@ -102,6 +102,7 @@
 
         if(back.contains(handler.getMouseClickX(),handler.getMouseClickY())){
             handler.resetMousePOS();
+
             setState(handler.getGame().menuState);
         }
     }
