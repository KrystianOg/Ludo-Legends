Index: src/states/HighScoresState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package states;\r\n\r\nimport Entities.ui.Button;\r\nimport GFX.Assets;\r\nimport GFX.DynamicBackground;\r\nimport GFX.Text;\r\nimport Players.PlayerData;\r\nimport ludogame.DBConnect;\r\nimport ludogame.Handler;\r\n\r\nimport java.awt.*;\r\nimport java.awt.geom.RoundRectangle2D;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\nimport static states.GameState.color;\r\n\r\n\r\n//tabela z wynikami\r\n//obsługa plików, zapis, odczyt, według nazwy gracza która bedzie podawana\r\n//sumuje zdobyte punkty / zbicia pionków, nie uwzględnia botów\r\n//wchodzi się z menu tak jak do ustawień\r\n\r\n//może eksportowanie plików na stronę internetową?\r\n\r\npublic class HighScoresState extends State{\r\n\r\n    //private final Button back;\r\n    private static final int LEADERBOARD_WIDTH=715,LEADERBOARD_HEIGHT=625;\r\n    private static int FRAME_X,FRAME_Y;\r\n\r\n    private final List<PlayerData> playerData;\r\n    private DBConnect connect;\r\n    private DynamicBackground dynamicBackground;\r\n    private final Color onHover=new Color(0,0,0,40);\r\n    private final Color grayOp=new Color(38,38,38,180);\r\n    private final Color textColor=new Color(26,26,26,220);\r\n\r\n    private boolean sortByScore;\r\n\r\n    private final Rectangle scoreHitbox;\r\n    private final Rectangle beatsHitbox;\r\n    private boolean scoreHover,beatsHover;\r\n\r\n    private final Entities.ui.Button back;\r\n\r\n    public HighScoresState(Handler handler) {\r\n        super(handler);\r\n\r\n        playerData=new LinkedList<>();\r\n        FRAME_X=(handler.getFrameWidth()-LEADERBOARD_WIDTH)/2;\r\n        FRAME_Y=(handler.getFrameHeight()-LEADERBOARD_HEIGHT+40)/2+15;\r\n\r\n        back=new Button(handler,940,35,(float)0.7,Assets.medium_button_template,Assets.back_button);\r\n\r\n        scoreHitbox=new Rectangle(FRAME_X+375,45,150,45);\r\n        beatsHitbox=new Rectangle(FRAME_X+545,45,150,45);\r\n\r\n        scoreHover=false;\r\n        beatsHover=false;\r\n    }\r\n\r\n    public void init(DynamicBackground dynamicBackground){\r\n        playerData.clear();\r\n        this.dynamicBackground=dynamicBackground;\r\n        connect=new DBConnect();    //<-highscores;\r\n\r\n        if(connect.isConnected())\r\n        connect.getData(\"score\",10,playerData);\r\n\r\n        sortByScore=true;\r\n    }\r\n\r\n    @Override\r\n    public void tick() {\r\n        dynamicBackground.tick();\r\n        back.tick();\r\n\r\n        if(scoreHitbox.contains(handler.getHoverX(),handler.getHoverY())){\r\n            scoreHover=true;\r\n            if(scoreHitbox.contains(handler.getMouseClickX(),handler.getMouseClickY())&&!sortByScore){\r\n                handler.resetMousePOS();\r\n                playerData.clear();\r\n                connect.getData(\"score\",10,playerData);\r\n                sortByScore=true;\r\n            }\r\n        }\r\n        else\r\n            scoreHover=false;\r\n\r\n        if(beatsHitbox.contains(handler.getHoverX(),handler.getHoverY())){\r\n            beatsHover=true;\r\n            if(beatsHitbox.contains(handler.getMouseClickX(),handler.getMouseClickY())&&sortByScore){\r\n                handler.resetMousePOS();\r\n                playerData.clear();\r\n                connect.getData(\"kills\",10,playerData);\r\n                sortByScore=false;\r\n            }\r\n        }\r\n        else\r\n            beatsHover=false;\r\n\r\n        if(back.contains(handler.getMouseClickX(),handler.getMouseClickY())){\r\n            handler.resetMousePOS();\r\n            setState(handler.getGame().menuState);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void render(Graphics g) {\r\n        Graphics2D g2=(Graphics2D)g;\r\n\r\n        dynamicBackground.render(g);\r\n\r\n        drawHead(g);\r\n        fillRoundRec(g);\r\n\r\n        for(int i=0;i<playerData.size();i++){\r\n            drawNextPlayer(playerData.get(i),i,g);\r\n        }\r\n\r\n        if(scoreHover) {\r\n            g2.setPaint(onHover);\r\n            g2.fill(new RoundRectangle2D.Double(FRAME_X + 375, 45, 150, 45, 10, 10));\r\n        }else if(beatsHover)  {\r\n            g2.setPaint(onHover);\r\n            g2.fill(new RoundRectangle2D.Double(FRAME_X+545,45,150,45,10,10));\r\n        }\r\n\r\n        back.render(g);\r\n\r\n    }\r\n\r\n    private void drawHead(Graphics g){\r\n\r\n        Graphics2D g2=(Graphics2D)g;\r\n        g2.setPaint(grayOp);\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X,30,LEADERBOARD_WIDTH,75,20,20));\r\n\r\n        g2.setPaint(new Color(233,192,33));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+20,45,45,45,10,10));\r\n        g2.setPaint(Color.white);\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+85,45,270,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+375,45,150,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+545,45,150,45,10,10));\r\n\r\n        Text.drawString(g,\"Nickname\",FRAME_X+95,82,false,textColor,Assets.Ubuntu40);\r\n        Text.drawString(g,\"Score\",FRAME_X+385,82,false,textColor,Assets.Ubuntu40);\r\n        Text.drawString(g,\"Beats\",FRAME_X+555,82,false,textColor,Assets.Ubuntu40);\r\n    }\r\n\r\n    private void fillRoundRec(Graphics g){\r\n        Graphics2D g2=(Graphics2D)g;\r\n        g2.setPaint(grayOp);\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X,FRAME_Y,LEADERBOARD_WIDTH,LEADERBOARD_HEIGHT,20,20));\r\n    }\r\n\r\n    private void drawNextPlayer(PlayerData playerData,int i,Graphics g){\r\n        Graphics2D g2=(Graphics2D)g;\r\n\r\n        g2.setPaint(Color.white);\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+20,FRAME_Y+20+i*60,45,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+85,FRAME_Y+20+i*60,270,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+375,FRAME_Y+20+i*60,150,45,10,10));\r\n        g2.fill(new RoundRectangle2D.Double(FRAME_X+545,FRAME_Y+20+i*60,150,45,10,10));\r\n\r\n        if(i>=0&&i<3){  //puchary\r\n            g.drawImage(Assets.cup[i],FRAME_X+22,FRAME_Y+i*60+22,null);\r\n        }\r\n        else{           //numer miejsca\r\n            Text.drawString(g,Integer.toString(i+1),FRAME_X+42,FRAME_Y+i*60+42,true,textColor,Assets.Ubuntu40);\r\n        }\r\n\r\n        Text.drawString(g,playerData.getNickname(),FRAME_X+95,FRAME_Y+i*60+54,false,textColor,Assets.Ubuntu34);\r\n        Text.drawString(g,Integer.toString(playerData.getScore()),FRAME_X+385,FRAME_Y+i*60+54,false,textColor,Assets.Ubuntu34);\r\n        Text.drawString(g,Integer.toString(playerData.getKills()),FRAME_X+555,FRAME_Y+i*60+54,false,textColor,Assets.Ubuntu34);\r\n    }\r\n\r\n    private void getScore()\r\n    {\r\n\r\n\r\n    }\r\n\r\n    private void getKills()\r\n    {\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/states/HighScoresState.java	(revision 6eea23c141276369a061c567ea06d48da80d4eac)
+++ src/states/HighScoresState.java	(date 1588160304282)
@@ -102,6 +102,7 @@
 
         if(back.contains(handler.getMouseClickX(),handler.getMouseClickY())){
             handler.resetMousePOS();
+
             setState(handler.getGame().menuState);
         }
     }
Index: src/Entities/ui/Button.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Entities.ui;\r\n\r\nimport Entities.Entity;\r\nimport ludogame.Handler;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\n\r\npublic class Button extends Entity {\r\n\r\n    private final BufferedImage[] template;\r\n    private final BufferedImage text;\r\n    private final Rectangle hitbox;\r\n    private boolean onhover;\r\n    private int onOff, defaultOnOff;\r\n\r\n    public Button(Handler handler, float x, float y,float scale,BufferedImage[] template,BufferedImage text){\r\n        super(handler,x,y,(int)(text.getWidth()*scale),(int)(text.getHeight()*scale));\r\n\r\n        this.hitbox=new Rectangle((int)x,(int)y,width,height);\r\n        this.template= template;\r\n        this.text=text;\r\n        this.onhover=false;\r\n    }\r\n\r\n    public Button(Handler handler, float x, float y,BufferedImage[] template,BufferedImage text){\r\n        super(handler,x,y,text.getWidth(),text.getHeight());\r\n\r\n        this.hitbox=new Rectangle((int)x,(int)y,width,height);\r\n        this.template= template;\r\n        this.text=text;\r\n        this.onhover=false;\r\n    }\r\n    \r\n    public Button(Handler handler, float x, float y,float scale,BufferedImage[] template,BufferedImage text, int onOff){\r\n    \tsuper(handler,x,y,(int)(text.getWidth()*scale),(int)(text.getHeight()*scale));\r\n\r\n        this.hitbox=new Rectangle((int)x,(int)y,width,height);\r\n        this.template= template;\r\n        this.text=text;\r\n        this.onOff=onOff;\r\n        this.defaultOnOff=onOff;\r\n\r\n    }\r\n\r\n    @Override\r\n    public void tick() {\r\n    if (onOff==0)\r\n        this.onhover= this.hitbox.contains(handler.getGame().getMousemanager().getHoverX(), handler.getGame().getMousemanager().getHoverY());\r\n    \r\n    }\r\n\r\n    @Override\r\n    public void render(Graphics g) {\r\n    \tif(onOff==0) {\r\n        g.drawImage(template[0],(int)x,(int)y,width,height,null);\r\n        g.drawImage(text,(int)x,(int)y,width,height,null);\r\n\r\n        if(onhover)\r\n            g.drawImage(template[1],(int)x,(int)y, width, height,null);\r\n    \t}\r\n    \telse if (onOff==1) {\r\n    \t\tg.drawImage(template[0],(int)x,(int)y,width,height,null);\r\n    \t\tg.drawImage(text,(int)x,(int)y,width,height,null);\r\n    \t}\r\n    \telse if (onOff==2){\r\n    \t\tg.drawImage(template[1],(int)x,(int)y,width,height,null);\r\n    \t\tg.drawImage(text,(int)x,(int)y,width,height,null);\r\n    \t}\r\n\r\n    }\r\n\r\n    public Rectangle getHitbox(){\r\n        return this.hitbox;\r\n    }\r\n\r\n    public boolean contains(int MouseX,int MouseY){\r\n        return this.contains(MouseX,MouseY);\r\n    }\r\n\r\n    public void reset() {\r\n    \tonOff=defaultOnOff;\r\n    \t\r\n    }\r\n\r\n\tpublic int getOnOff() {\r\n\t\treturn onOff;\r\n\t}\r\n\r\n\tpublic void setOnOff(int onOff) {\r\n\t\tthis.onOff = onOff;\r\n\t}\r\n    \r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Entities/ui/Button.java	(revision 6eea23c141276369a061c567ea06d48da80d4eac)
+++ src/Entities/ui/Button.java	(date 1588161132353)
@@ -75,7 +75,7 @@
     }
 
     public boolean contains(int MouseX,int MouseY){
-        return this.contains(MouseX,MouseY);
+        return this.hitbox.contains(MouseX,MouseY);
     }
 
     public void reset() {
Index: src/ludogame/LoadingScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ludogame;\r\n\r\nimport GFX.Assets;\r\nimport display.Display;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferStrategy;\r\n\r\npublic class LoadingScreen implements Runnable{\r\n        //info\r\n    private final int width;\r\n    private final int height;\r\n    private final Handler handler;\r\n        //\r\n    private boolean running=false;\r\n    private Thread thread;\r\n\r\n    private BufferStrategy bs;\r\n    private Graphics g;\r\n    private final Display display;\r\n\r\n    //grafiki\r\n    private int value=0;\r\n    private int tick=0;\r\n\r\n\r\n    public LoadingScreen(Handler handler,String title,int width,int height){\r\n        this.handler =handler;\r\n        this.width=width;\r\n        this.height=height;\r\n\r\n        display=new Display(title,width,height);\r\n        handler.setDisplay(display);\r\n\r\n\r\n    }\r\n\r\n    private void init(){\r\n        Assets.initLoadingScreen();\r\n    }\r\n\r\n    private void tick(){\r\n        tick++;\r\n        if(tick%10==0) {\r\n            value++;\r\n            if(value==4)\r\n                value=0;\r\n        }\r\n\r\n        if(handler.getGame()!=null)\r\n            running=false;\r\n    }\r\n\r\n    private void render(){\r\n        bs=display.getCanvas().getBufferStrategy();\r\n        if(bs==null){\r\n            display.getCanvas().createBufferStrategy(3);\r\n            return;\r\n        }\r\n\r\n        g=bs.getDrawGraphics();\r\n\r\n        g.clearRect(0,0,width,height);\r\n        //\r\n            renderLoadingScreen(g);\r\n\r\n        //\r\n        bs.show();\r\n        g.dispose();\r\n    }\r\n\r\n    private void renderLoadingScreen(Graphics g){\r\n\r\n        g.setColor(Color.white);\r\n        g.fillRect(0,0,width,height);\r\n\r\n        g.drawImage(Assets.loadingDot[value],(width-Assets.loadingDot[value].getWidth()+value*30)/2,(height-Assets.loadingCircle.getHeight())/2+100,null);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        init();\r\n\r\n        double timePerTick= 1000000000/60;   //in nanoseconds\r\n        double delta=0;\r\n        long now;\r\n        long lastTime=System.nanoTime();\r\n\r\n        long timer=0;\r\n        int ticks=0;\r\n\r\n        while(running){\r\n            now=System.nanoTime();\r\n            delta+=(now-lastTime)/timePerTick;\r\n            timer+=now-lastTime;\r\n            lastTime=now;\r\n\r\n            if(delta>=1) {\r\n                tick();\r\n                render();\r\n                ticks++;\r\n                delta--;\r\n            }\r\n        }\r\n        stop();\r\n    }\r\n\r\n    public synchronized  void start(){\r\n        if(running)\r\n            return;\r\n\r\n        running=true;\r\n        thread=new Thread(this);\r\n        thread.start();\r\n    }\r\n\r\n    public synchronized void stop(){\r\n        if(!running)\r\n            return;\r\n\r\n        running =false;\r\n\r\n        try {\r\n            thread.join();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ludogame/LoadingScreen.java	(revision 6eea23c141276369a061c567ea06d48da80d4eac)
+++ src/ludogame/LoadingScreen.java	(date 1588164976643)
@@ -47,7 +47,7 @@
                 value=0;
         }
 
-        if(handler.getGame()!=null)
+        if(handler.getGame()!=null);
             running=false;
     }
 
